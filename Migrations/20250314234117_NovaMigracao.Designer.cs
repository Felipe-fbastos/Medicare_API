// <auto-generated />
using System;
using Medicare_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Medicare_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250314234117_NovaMigracao")]
    partial class NovaMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Medicare_API.Models.Alarme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtHoraAlarme")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPosologia")
                        .HasColumnType("int");

                    b.Property<int>("IdRemedio")
                        .HasColumnType("int");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRemedio");

                    b.HasIndex("IdPosologia", "IdRemedio");

                    b.ToTable("ALARMES");
                });

            modelBuilder.Entity("Medicare_API.Models.Cuidador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .HasColumnType("int");

                    b.Property<int>("IdCuidador")
                        .HasColumnType("int");

                    b.Property<DateTime>("DcCuidador")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DuCuidador")
                        .HasColumnType("datetime2");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("IdUtilizador", "IdCuidador");

                    b.HasIndex("IdCuidador");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("CUIDADOR");
                });

            modelBuilder.Entity("Medicare_API.Models.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdMinimaParcelas")
                        .HasColumnType("int");

                    b.Property<int>("QtdParcelas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FORMAS_PAGAMENTO");
                });

            modelBuilder.Entity("Medicare_API.Models.GrauParentesco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GrauParentesco");
                });

            modelBuilder.Entity("Medicare_API.Models.HistoricoPosologia", b =>
                {
                    b.Property<int>("IdPosologia")
                        .HasColumnType("int");

                    b.Property<int>("IdRemedio")
                        .HasColumnType("int");

                    b.Property<int>("RemedioId")
                        .HasColumnType("int");

                    b.Property<int>("SdPosologia")
                        .HasColumnType("int");

                    b.HasKey("IdPosologia", "IdRemedio");

                    b.HasIndex("RemedioId");

                    b.ToTable("HISTORICO_POSOLOGIA");
                });

            modelBuilder.Entity("Medicare_API.Models.Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Laboratorio");
                });

            modelBuilder.Entity("Medicare_API.Models.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PARCEIROS");
                });

            modelBuilder.Entity("Medicare_API.Models.ParceiroUtilizador", b =>
                {
                    b.Property<int>("IdParceiro")
                        .HasColumnType("int");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.HasKey("IdParceiro");

                    b.HasIndex("IdColaborador");

                    b.ToTable("PARCEIRO_UTILIZADORES");
                });

            modelBuilder.Entity("Medicare_API.Models.Posologia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdRemedio")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUtilizador")
                        .HasColumnType("int");

                    b.Property<int>("Intervalo")
                        .HasColumnType("int");

                    b.Property<int>("QtdRemedio")
                        .HasColumnType("int");

                    b.HasKey("Id", "IdRemedio");

                    b.HasIndex("IdRemedio");

                    b.HasIndex("IdUtilizador");

                    b.ToTable("POSOLOGIA");
                });

            modelBuilder.Entity("Medicare_API.Models.Promocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaDePagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdRemedio")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<int>("formaDePagamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdRemedio");

                    b.HasIndex("formaDePagamentoId");

                    b.ToTable("PROMOCOES");
                });

            modelBuilder.Entity("Medicare_API.Models.Remedio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Anotacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dosagem")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGrandeza")
                        .HasColumnType("int");

                    b.Property<int>("IdLaboratorio")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("QtdAlerta")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdGrandeza");

                    b.HasIndex("IdLaboratorio");

                    b.ToTable("REMEDIO");
                });

            modelBuilder.Entity("Medicare_API.Models.Responsavel", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .HasColumnType("int");

                    b.Property<int>("IdResponsavel")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtUltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGrauParentesco")
                        .HasColumnType("int");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("IdUtilizador", "IdResponsavel");

                    b.HasIndex("IdGrauParentesco");

                    b.HasIndex("IdResponsavel");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("RESPONSAVEL");
                });

            modelBuilder.Entity("Medicare_API.Models.TipoOrdemGrandeza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TIPO_ORDEMGRANDEZA");
                });

            modelBuilder.Entity("Medicare_API.Models.TipoUtilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TIPO_UTILIZADOR");
                });

            modelBuilder.Entity("Medicare_API.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTipoUtilizador")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoUtilizador");

                    b.ToTable("UTILIZADOR");
                });

            modelBuilder.Entity("Medicare_API.Models.Alarme", b =>
                {
                    b.HasOne("Medicare_API.Models.Remedio", "Remedio")
                        .WithMany("Alarmes")
                        .HasForeignKey("IdRemedio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Posologia", "Posologia")
                        .WithMany("Alarmes")
                        .HasForeignKey("IdPosologia", "IdRemedio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Posologia");

                    b.Navigation("Remedio");
                });

            modelBuilder.Entity("Medicare_API.Models.Cuidador", b =>
                {
                    b.HasOne("Medicare_API.Models.Utilizador", "cuidador")
                        .WithMany()
                        .HasForeignKey("IdCuidador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Utilizador", "Utilizador")
                        .WithMany()
                        .HasForeignKey("IdUtilizador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Utilizador", null)
                        .WithMany("Cuidadores")
                        .HasForeignKey("UtilizadorId");

                    b.Navigation("Utilizador");

                    b.Navigation("cuidador");
                });

            modelBuilder.Entity("Medicare_API.Models.HistoricoPosologia", b =>
                {
                    b.HasOne("Medicare_API.Models.Remedio", "Remedio")
                        .WithMany("HistoricoPosologias")
                        .HasForeignKey("RemedioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Posologia", "Posologia")
                        .WithMany("HistoricoPosologias")
                        .HasForeignKey("IdPosologia", "IdRemedio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Posologia");

                    b.Navigation("Remedio");
                });

            modelBuilder.Entity("Medicare_API.Models.ParceiroUtilizador", b =>
                {
                    b.HasOne("Medicare_API.Models.Utilizador", "colaborador")
                        .WithMany("ParceiroUtilizadores")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Parceiro", "Parceiro")
                        .WithMany("ParceiroUtilizador")
                        .HasForeignKey("IdParceiro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Parceiro");

                    b.Navigation("colaborador");
                });

            modelBuilder.Entity("Medicare_API.Models.Posologia", b =>
                {
                    b.HasOne("Medicare_API.Models.Remedio", "Remedio")
                        .WithMany("Posologias")
                        .HasForeignKey("IdRemedio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Utilizador", "Utilizador")
                        .WithMany("Posologias")
                        .HasForeignKey("IdUtilizador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Remedio");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Medicare_API.Models.Promocao", b =>
                {
                    b.HasOne("Medicare_API.Models.Utilizador", "colaborador")
                        .WithMany("Promocoes")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Remedio", "remedio")
                        .WithMany("Promocoes")
                        .HasForeignKey("IdRemedio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.FormaPagamento", "formaDePagamento")
                        .WithMany("Promocoes")
                        .HasForeignKey("formaDePagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("colaborador");

                    b.Navigation("formaDePagamento");

                    b.Navigation("remedio");
                });

            modelBuilder.Entity("Medicare_API.Models.Remedio", b =>
                {
                    b.HasOne("Medicare_API.Models.TipoOrdemGrandeza", "grandeza")
                        .WithMany("Remedios")
                        .HasForeignKey("IdGrandeza")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Laboratorio", "laboratorio")
                        .WithMany("Remedios")
                        .HasForeignKey("IdLaboratorio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("grandeza");

                    b.Navigation("laboratorio");
                });

            modelBuilder.Entity("Medicare_API.Models.Responsavel", b =>
                {
                    b.HasOne("Medicare_API.Models.GrauParentesco", "GrauParentesco")
                        .WithMany("Responsavel")
                        .HasForeignKey("IdGrauParentesco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Utilizador", "responsavel")
                        .WithMany()
                        .HasForeignKey("IdResponsavel")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Utilizador", "Utilizador")
                        .WithMany()
                        .HasForeignKey("IdUtilizador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare_API.Models.Utilizador", null)
                        .WithMany("Responsaveis")
                        .HasForeignKey("UtilizadorId");

                    b.Navigation("GrauParentesco");

                    b.Navigation("Utilizador");

                    b.Navigation("responsavel");
                });

            modelBuilder.Entity("Medicare_API.Models.Utilizador", b =>
                {
                    b.HasOne("Medicare_API.Models.TipoUtilizador", "TipoUtilizador")
                        .WithMany("Utilizadores")
                        .HasForeignKey("IdTipoUtilizador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoUtilizador");
                });

            modelBuilder.Entity("Medicare_API.Models.FormaPagamento", b =>
                {
                    b.Navigation("Promocoes");
                });

            modelBuilder.Entity("Medicare_API.Models.GrauParentesco", b =>
                {
                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("Medicare_API.Models.Laboratorio", b =>
                {
                    b.Navigation("Remedios");
                });

            modelBuilder.Entity("Medicare_API.Models.Parceiro", b =>
                {
                    b.Navigation("ParceiroUtilizador");
                });

            modelBuilder.Entity("Medicare_API.Models.Posologia", b =>
                {
                    b.Navigation("Alarmes");

                    b.Navigation("HistoricoPosologias");
                });

            modelBuilder.Entity("Medicare_API.Models.Remedio", b =>
                {
                    b.Navigation("Alarmes");

                    b.Navigation("HistoricoPosologias");

                    b.Navigation("Posologias");

                    b.Navigation("Promocoes");
                });

            modelBuilder.Entity("Medicare_API.Models.TipoOrdemGrandeza", b =>
                {
                    b.Navigation("Remedios");
                });

            modelBuilder.Entity("Medicare_API.Models.TipoUtilizador", b =>
                {
                    b.Navigation("Utilizadores");
                });

            modelBuilder.Entity("Medicare_API.Models.Utilizador", b =>
                {
                    b.Navigation("Cuidadores");

                    b.Navigation("ParceiroUtilizadores");

                    b.Navigation("Posologias");

                    b.Navigation("Promocoes");

                    b.Navigation("Responsaveis");
                });
#pragma warning restore 612, 618
        }
    }
}
